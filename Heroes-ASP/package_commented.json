//json doesn't support comments. So this is converted using jsmin - http://www.crockford.com/javascript/jsmin.html
//jsmin <package_commented.json >package.json

//We execute most npm scripts in the following way: npm run followed by a script-name. Some commands (such as start) don't require the run keyword.

//npm start - runs the compiler and a server at the same time, both in "watch mode"

//npm run tsc - runs the TypeScript compiler once

//npm run tsc:w - runs the TypeScript compiler in watch mode; the process keeps running, awaiting changes to TypeScript files and recompiling when it sees them

//npm run lite - runs the lite-server, a light-weight, static file server with excellent support for Angular apps that use routing

//npm run typings - runs the typings tool separately

//npm run postinstall - called by npm automatically after it successfully completes package installation. This script installs the TypeScript definition files defined in typings.json

{
  "name": "angular2-tutorial-heroes",
  "version": "1.0.0",
  "scripts": {
    "start": "tsc && concurrently \"npm run tsc:w\" \"npm run lite\" ",
    "lite": "lite-server",
    "postinstall": "typings install", //We installed the typings tool with npm (it's listed among the devDependencies in the package.json) and added an npm script to run that tool automatically after npm installation completes. We can run it manually by running 'npm run typings install'
    "tsc": "tsc",
    "tsc:w": "tsc -w",
    "typings": "typings"
  },
  "license": "ISC",
  "dependencies": {
    "@angular/common": "2.0.0-rc.5", //The commonly needed services, pipes and directives provided by the Angular team.
    "@angular/compiler": "2.0.0-rc.5", //Angular's Template Compiler. It understand templates and can convert them to code that makes the app run and render. Developers typically donâ€™t interact with the compiler directly. They use it indirectly via platform-browser-dynamic or the offline template compiler.
    "@angular/core": "2.0.0-rc.5", //Critical runtime parts of the framework needed by every application. Includes all metadata decorators, Component, Directive, dependency injection, and the component lifecycle hooks.
    "@angular/forms": "0.3.0",
    "@angular/http": "2.0.0-rc.5", //Angular's http client.
    "@angular/platform-browser": "2.0.0-rc.5",
    "@angular/platform-browser-dynamic": "2.0.0-rc.5", //Everything DOM and browser related, especially the pieces that help render into DOM. This package also includes the bootstrapStatic method for bootstrapping applications for production builds that pre-compile templates offline.
    "@angular/router": "3.0.0-rc.1", //Component router.
    "@angular/router-deprecated": "2.0.0-rc.2",
    "@angular/upgrade": "2.0.0-rc.5", //Set of utilities for upgrading Angular 1 applications.
    "systemjs": "0.19.27", //A dynamic module loader compatible with the ES2015 module specification. There are other viable choices including the well-regarded webpack. SystemJS happens to be the one we use in the documentation samples. It works.
    "core-js": "^2.4.0", //Monkey patches the global context (window) with essential features of ES2015 (ES6). Developers may substitute an alternative polyfill that provides the same core APIs. This dependency should go away once these APIs are implemented by all supported ever-green browsers.
    "reflect-metadata": "^0.1.3", //A dependency shared between Angular and the TypeScript compiler. Developers should be able to update a TypeScript package without upgrading Angular, which is why this is a dependency of the application and not a dependency of Angular.
    "rxjs": "5.0.0-beta.6", //A polyfill for the Observables specification currently before the TC39 committee that determines standards for the JavaScript language. Developers should be able to pick a preferred version of rxjs (within a compatible version range) without waiting for Angular updates.
    "zone.js": "^0.6.12", //A polyfill for the Zone specification currently before the TC39 committee that determines standards for the JavaScript language. Developers should be able to pick a preferred version of zone.js to use (within a compatible version range) without waiting for Angular updates.
    "angular2-in-memory-web-api": "0.0.15", //An Angular-supported library that simulates a remote server's web api without requiring an actual server or real http calls. Good for demos, documentation samples, and early stage development (before we even have a server). Learn about it in the Http Client chapter.
    "bootstrap": "^3.3.6"
  },
  "devDependencies": {
    "concurrently": "^2.0.0", //A utility to run multiple npm commands concurrently on OS/X, Windows, and Linux operating systems.
    "lite-server": "^2.2.0", //A light-weight, static file server, written and maintained by John Papa with excellent support for Angular apps that use routing.
    "typescript": "^1.8.10", //The TypeScript language server including the tsc TypeScript compiler.
    "typings":"^1.0.4" //A manager for TypeScript definition files. Learn more about it in the TypeScript Configuration chapter.
  }
}
